#!/bin/zsh

# archey-osx 1.5.2 (https://github.com/obihann/archey-osx/)
# heavily modified

source ~/.local/customizations/progress.zsh

export MONOKAI_YELLOW=221
export MONOKAI_GREEN=150
export MONOKAI_BLUE=116

user=$(whoami)
hostname=$(hostname | sed 's/.local//g')

# ipfile="/tmp/archey-ip"
# if [[ -e "$ipfile" ]] && test $(find "$ipfile" -mmin -360); then
#     while read -r line; do
#         ip="$line"
#     done < "$ipfile"
# else
#     # ip=$(dig +short myip.opendns.com @resolver1.opendns.com)
#     ip=$(curl -s ipecho.net/plain)
#     echo $ip > "$ipfile"
# fi

reset=$(tput sgr0 2>/dev/null)
blue="\033[38;5;39m"
gray="\033[38;5;8m"

ip=$(ipconfig getifaddr en0)
distro="macOS $(sw_vers -productVersion)"
kernel=$(uname)
uptime=$(uptime | sed 's/.*up \([^,]*\), .*/\1/')
shell="$SHELL"
terminal="${TERM_PROGRAM//.app/} ($TERM)"
cpu=$(sysctl -n machdep.cpu.brand_string)

battery=$(ioreg -c AppleSmartBattery -r | awk '
  $1~/Capacity/{c[$1]=$3}
  $1~/TimeRemaining/{time=$3}
  END{
    OFMT="%.2f"
    max=c["\"MaxCapacity\""]
    percent = 100 * c["\"CurrentCapacity\""] / max
    hours = int(time / 60)
    minutes = time % 60
    printf("%.0f%% (%d:%02d remaining)\n", percent, hours, minutes)
  }'
)
battery_percent=$(echo "$battery" | sed 's/\(.*\)%.*$/\1/')
battery="$(printf "%26s" $battery)"
battery="$(progress_bar $MONOKAI_YELLOW $battery_percent 100)  $gray$battery"

vmstat=$(vm_stat)
page_size=$(echo "$vmstat" | grep 'page size' | cut -d ' ' -f 8)
free_pages=$(echo "$vmstat" | awk '/^Pages free/ {print substr($3, 1, length($3)-1)}')
file_pages=$(echo "$vmstat" | awk '/^File-backed pages/ {print substr($3, 1, length($3)-1)}')
mem_total=$(( $(sysctl -n hw.memsize) / 1024.0 ** 3 ))
mem_used=$(( $mem_total - (($page_size * ($free_pages + $file_pages)) / 1024.0 ** 3) ))
mem_used_percent=$(( 100 * $mem_used / $mem_total ))
ram="$(progress_bar $MONOKAI_GREEN $mem_used $mem_total)  $gray$(printf "%4.1f GiB / %4d GiB (%3d%%)" $mem_used $mem_total $mem_used_percent)"

read disk_used disk_total disk_percent <<< $(df -h | head -2 | tail -1 | awk '{gsub(/G/, "", $3); gsub(/G/, "", $2); print $3, $2, $5}')
disk="$(progress_bar $MONOKAI_BLUE $disk_used $disk_total)  $gray$(printf "%4d GiB / %4d GiB (%4s)" $disk_used $disk_total $disk_percent)"

echo -e "


                             ${blue}\e[3mWelcome to ${distro}, up ${uptime}${reset}

                             ${blue}Username  ${reset}${user}
                             ${blue}Hostname  ${reset}${hostname}
                             ${blue}Session   ${reset}$shell @ ${terminal}
                             ${blue}WAN-IP    ${reset}${ip}

                             ${blue}Memory    ${reset}${ram}
                             ${blue}Disk      ${reset}${disk}
                             ${blue}Battery   ${reset}${battery}

"
